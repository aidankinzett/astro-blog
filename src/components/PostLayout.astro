---
import { SEO } from "astro-seo";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE } from "../consts";
import BaseLayout from "./BaseLayout.astro";

type Props = CollectionEntry<"blog">["data"] & {
  og?: string;
};

const { title, description, pubDate, updatedDate, toc, og } = Astro.props;

const tocDisplay = toc ? "initial" : "none";
---

<BaseLayout>
  <BaseHead
    title={`${title} | ${SITE_TITLE}`}
    description={description}
    slot="head"
  />

  {
    og ? (
      <SEO
        charset="utf-8"
        slot="head"
        openGraph={{
          basic: {
            title,
            image: og,
            type: "article",
          },
          image: {
            alt: title,
          },
          article: {
            publishedTime: pubDate.toISOString(),
            modifiedTime: updatedDate?.toISOString(),
            authors: ["Aidan Kinzett"],
          },
        }}
        twitter={{
          image: og,
          imageAlt: title,
          description,
          title,
        }}
      />
    ) : (
      <SEO
        charset="utf-8"
        slot="head"
        openGraph={{
          basic: {
            title,
            image: "https://aidankinzett.com/default-og.png",
            type: "article",
          },
          image: {
            alt: title,
          },
        }}
        twitter={{
          image: "https://aidankinzett.com/default-og.png",
          imageAlt: title,
          description,
          title,
        }}
      />
    )
  }

  <div slot="beneath-header">
    <p class="text-2xl">{title}</p>
    {
      pubDate && (
        <time class="font-thin">
          {typeof pubDate === "string"
            ? pubDate
            : pubDate.toLocaleDateString("en-us", {
                year: "numeric",
                month: "short",
                day: "numeric",
              })}
        </time>
      )
    }
    {
      updatedDate && (
        <div class="font-light">
          Last updated on{" "}
          <time>
            {typeof updatedDate === "string"
              ? updatedDate
              : updatedDate.toLocaleDateString("en-us", {
                  year: "numeric",
                  month: "short",
                  day: "numeric",
                })}
          </time>
        </div>
      )
    }
    <p>By Aidan Kinzett</p>
  </div>
  <div
    class="prose md:prose-md prose-li:marker:text-primary-600 prose-a:text-primary-600 prose-headings:text-primary-900 dark:prose-invert dark:prose-headings:text-primary-200 dark:prose-li:marker:text-primary-200 dark:prose-a:text-primary-200"
  >
    <slot />
  </div>
</BaseLayout>

<style is:global define:vars={{ tocDisplay }}>
  .toc {
    display: var(--tocDisplay);
  }
</style>
